{
  "openapi": "3.0.0",
  "paths": {
    "/api/v1": {
      "get": {
        "operationId": "AppController_getHello",
        "parameters": [],
        "responses": {
          "200": {
            "description": ""
          }
        },
        "tags": [
          "App"
        ]
      }
    },
    "/api/v1/webhooks/transactions": {
      "post": {
        "operationId": "WebhooksController_handleTx",
        "parameters": [
          {
            "name": "x-idempotency-key",
            "in": "header",
            "required": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/IncomingTransactionDto"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Approved",
            "content": {
              "application/json": {
                "schema": {
                  "example": {
                    "data": {
                      "status": "approved",
                      "transactionId": "d3c1f9b6-2f2a-42a9-9f0f-1f91a6f7465d"
                    },
                    "message": "Approved",
                    "error": null
                  }
                }
              }
            }
          },
          "400": {
            "description": "Invalid station/card/currency",
            "content": {
              "application/json": {
                "schema": {
                  "examples": {
                    "CARD": {
                      "summary": "Card not found",
                      "value": {
                        "data": null,
                        "message": "Card not found",
                        "error": {
                          "code": "CARD_NOT_FOUND"
                        }
                      }
                    },
                    "ORG": {
                      "summary": "Organization not found",
                      "value": {
                        "data": null,
                        "message": "Organization not found",
                        "error": {
                          "code": "ORG_NOT_FOUND"
                        }
                      }
                    },
                    "CUR": {
                      "summary": "Currency mismatch",
                      "value": {
                        "data": null,
                        "message": "Currency mismatch",
                        "error": {
                          "code": "CURRENCY_MISMATCH"
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "409": {
            "description": "Duplicate webhook (idempotency key)",
            "content": {
              "application/json": {
                "schema": {
                  "example": {
                    "data": null,
                    "message": "Duplicate webhook (idempotency key)",
                    "error": {
                      "code": "DUPLICATE"
                    }
                  }
                }
              }
            }
          },
          "422": {
            "description": "Business rule validation failed",
            "content": {
              "application/json": {
                "schema": {
                  "examples": {
                    "DAILY": {
                      "summary": "Daily limit exceeded",
                      "value": {
                        "data": null,
                        "message": "Daily limit exceeded",
                        "error": {
                          "code": "DAILY_LIMIT_EXCEEDED"
                        }
                      }
                    },
                    "MONTHLY": {
                      "summary": "Monthly limit exceeded",
                      "value": {
                        "data": null,
                        "message": "Monthly limit exceeded",
                        "error": {
                          "code": "MONTHLY_LIMIT_EXCEEDED"
                        }
                      }
                    },
                    "FUNDS": {
                      "summary": "Insufficient funds",
                      "value": {
                        "data": null,
                        "message": "Insufficient organization balance",
                        "error": {
                          "code": "INSUFFICIENT_FUNDS"
                        }
                      }
                    },
                    "BLOCKED": {
                      "summary": "Card blocked",
                      "value": {
                        "data": null,
                        "message": "Card is blocked",
                        "error": {
                          "code": "CARD_BLOCKED"
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        },
        "summary": "Process incoming fuel transaction",
        "tags": [
          "webhooks"
        ]
      }
    }
  },
  "info": {
    "title": "MyLorry Fuel Service API",
    "description": "Webhook + transactions processing for fuel cards",
    "version": "1.0.0",
    "contact": {}
  },
  "tags": [
    {
      "name": "webhooks",
      "description": ""
    }
  ],
  "servers": [],
  "components": {
    "schemas": {
      "IncomingTransactionDto": {
        "type": "object",
        "properties": {
          "stationCode": {
            "type": "string",
            "example": "STN-001",
            "description": "Fuel station code"
          },
          "cardNumber": {
            "type": "string",
            "example": "4242424242424242",
            "description": "Card PAN as received from the station. Service should hash/mask before lookup."
          },
          "amountCents": {
            "type": "string",
            "example": "10000",
            "description": "Transaction amount in minor units (e.g., cents). Numeric string only."
          },
          "currency": {
            "type": "string",
            "example": "USD",
            "description": "ISO currency code"
          },
          "occurredAt": {
            "type": "string",
            "example": "2025-09-03T10:00:00Z",
            "description": "ISO-8601 timestamp when the transaction occurred"
          },
          "externalRef": {
            "type": "string",
            "example": "RRN-123456",
            "description": "Optional external reference from the station/acquirer"
          }
        },
        "required": [
          "stationCode",
          "cardNumber",
          "amountCents",
          "currency",
          "occurredAt"
        ]
      }
    }
  }
}